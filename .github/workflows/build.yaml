name: Build & Deploy to Fly
# run-name: ${{ github.actor }} is learning GitHub Actions
on:
  - push

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}:${{ github.sha }}

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-rust:
    runs-on: ubuntu-latest
    name: "üî® Rust Build and Lint"
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy
          cache-on-failure: true
      - name: Lint & Build
        run: |
          cargo fmt -q --check && echo Rust-fmt successful
          cargo clippy --release --locked -- -D warnings && echo Clippy successful
          cargo build --release --locked
      - uses: actions/upload-artifact@v4
        with:
          name: rust-binary
          path: target/release/rust_todo_api
          if-no-files-found: error
  build-docker:
    needs: build-rust
    runs-on: ubuntu-latest
    name: "üê≥ Build Container"
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: rust-binary
          path: target/release
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  migrate-db:
    if: github.ref_name == 'main'
    needs: build-docker
    runs-on: ubuntu-latest
    name: "‚ÜóÔ∏è Migrate DB"
    steps:
      - uses: actions/checkout@v4
      - name: Liquibase update
        env:
          LIQUIBASE_COMMAND_URL: "jdbc:${{ secrets.DATABASE_URL }}"
          LIQUIBASE_COMMAND_USERNAME: ${{ secrets.LIQUIBASE_COMMAND_USERNAME }}
          LIQUIBASE_COMMAND_PASSWORD: ${{ secrets.LIQUIBASE_COMMAND_PASSWORD }}
        run: |
          set -v
          curl -fLO https://github.com/liquibase/liquibase/releases/download/v4.28.0/liquibase-4.28.0.tar.gz
          tar -xf liquibase-4.28.0.tar.gz liquibase internal
          ./liquibase update
  deploy:
    if: github.ref_name == 'main'
    needs: migrate-db
    runs-on: ubuntu-latest
    name: "üöÄ Deploy to fly"
    permissions:
      packages: read
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup fly
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly Deploy
        run: flyctl deploy -i $IMAGE_NAME
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
